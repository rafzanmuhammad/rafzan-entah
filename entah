#define BLYNK_PRINT Serial

#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>
#include <UniversalTelegramBot.h>
#include <WiFiClientSecure.h>

// Replace with your network credentials
char ssid[] = "Your_SSID";
char pass[] = "Your_PASSWORD";

// Replace with your Blynk auth token
char auth[] = "Your_Blynk_Auth_Token";

// Replace with your Telegram bot token and chat ID
const char* telegramBotToken = "Your_Telegram_Bot_Token";
const char* chatID = "Your_Telegram_Chat_ID";

// Define GPIO pins for the relays, PIR sensor, and siren
#define RELAY1 25
#define RELAY2 26
#define RELAY3 27
#define RELAY4 33
#define PIR_SENSOR 32
#define SIREN 14

WiFiClientSecure client;
UniversalTelegramBot bot(telegramBotToken, client);

BLYNK_WRITE(V0) {
  int pinValue = param.asInt();
  digitalWrite(RELAY1, pinValue);
}

BLYNK_WRITE(V1) {
  int pinValue = param.asInt();
  digitalWrite(RELAY2, pinValue);
}

BLYNK_WRITE(V2) {
  int pinValue = param.asInt();
  digitalWrite(RELAY3, pinValue);
}

BLYNK_WRITE(V3) {
  int pinValue = param.asInt();
  digitalWrite(RELAY4, pinValue);
}

void setup() {
  // Start serial communication
  Serial.begin(115200);
  Blynk.begin(auth, ssid, pass);

  // Initialize relay pins as outputs
  pinMode(RELAY1, OUTPUT);
  pinMode(RELAY2, OUTPUT);
  pinMode(RELAY3, OUTPUT);
  pinMode(RELAY4, OUTPUT);
  pinMode(SIREN, OUTPUT);
  pinMode(PIR_SENSOR, INPUT);

  // Initially set all relays and siren to off
  digitalWrite(RELAY1, LOW);
  digitalWrite(RELAY2, LOW);
  digitalWrite(RELAY3, LOW);
  digitalWrite(RELAY4, LOW);
  digitalWrite(SIREN, LOW);

  // Connect to WiFi
  client.setCACert(TELEGRAM_CERTIFICATE_ROOT);
}

void loop() {
  Blynk.run();

  int pirState = digitalRead(PIR_SENSOR);
  if (pirState == HIGH) {
    digitalWrite(SIREN, HIGH);
    sendTelegramMessage("Intruder alert! Motion detected in your home.");
    delay(10000); // Siren and notification delay
    digitalWrite(SIREN, LOW);
  }
}

void sendTelegramMessage(String message) {
  if (bot.sendMessage(chatID, message, "")) {
    Serial.println("Telegram message sent successfully");
  } else {
    Serial.println("Failed to send Telegram message");
  }
}
